{
 "component": {
    "kind": "component",
    "scheme": "olingo2",
    "syntax": "olingo2:apiName/methodName",
    "title": "Olingo2",
    "description": "Communicates with OData 2.0 services using Apache Olingo.",
    "label": "cloud",
    "deprecated": false,
    "deprecationNote": "",
    "async": false,
    "consumerOnly": false,
    "producerOnly": false,
    "lenientProperties": false,
    "javaType": "org.apache.camel.component.olingo2.Olingo2Component",
    "firstVersion": "2.14.0",
    "groupId": "org.apache.camel",
    "artifactId": "camel-olingo2",
    "version": "3.0.0-SNAPSHOT"
  },
  "componentProperties": {
    "configuration": { "kind": "property", "displayName": "Configuration", "group": "common", "required": false, "type": "object", "javaType": "org.apache.camel.component.olingo2.Olingo2Configuration", "deprecated": false, "secret": false, "description": "To use the shared configuration" },
    "useGlobalSslContextParameters": { "kind": "property", "displayName": "Use Global Ssl Context Parameters", "group": "security", "label": "security", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Enable usage of global SSL context parameters." },
    "resolvePropertyPlaceholders": { "kind": "property", "displayName": "Resolve Property Placeholders", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": true, "description": "Whether the component should resolve property placeholders on itself when starting. Only properties which are of String type can use property placeholders." },
    "basicPropertyBinding": { "kind": "property", "displayName": "Basic Property Binding", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities" }
  },
  "properties": {
    "apiName": { "kind": "path", "displayName": "Api Name", "group": "common", "required": true, "type": "object", "javaType": "org.apache.camel.component.olingo2.internal.Olingo2ApiName", "enum": [ "DEFAULT" ], "deprecated": false, "secret": false, "description": "What kind of operation to perform" },
    "methodName": { "kind": "path", "displayName": "Method Name", "group": "common", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "What sub operation to use for the selected operation" },
    "connectTimeout": { "kind": "parameter", "displayName": "Connect Timeout", "group": "common", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "secret": false, "defaultValue": 30000, "description": "HTTP connection creation timeout in milliseconds, defaults to 30,000 (30 seconds)" },
    "contentType": { "kind": "parameter", "displayName": "Content Type", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "defaultValue": "application/json;charset=utf-8", "description": "Content-Type header value can be used to specify JSON or XML message format, defaults to application/json;charset=utf-8" },
    "filterAlreadySeen": { "kind": "parameter", "displayName": "Filter Already Seen", "group": "common", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Set this to true to filter out results that have already been communicated by this component." },
    "httpAsyncClientBuilder": { "kind": "parameter", "displayName": "Http Async Client Builder", "group": "common", "required": false, "type": "object", "javaType": "org.apache.http.impl.nio.client.HttpAsyncClientBuilder", "deprecated": false, "secret": false, "description": "Custom HTTP async client builder for more complex HTTP client configuration, overrides connectionTimeout, socketTimeout, proxy and sslContext. Note that a socketTimeout MUST be specified in the builder, otherwise OData requests could block indefinitely" },
    "httpClientBuilder": { "kind": "parameter", "displayName": "Http Client Builder", "group": "common", "required": false, "type": "object", "javaType": "org.apache.http.impl.client.HttpClientBuilder", "deprecated": false, "secret": false, "description": "Custom HTTP client builder for more complex HTTP client configuration, overrides connectionTimeout, socketTimeout, proxy and sslContext. Note that a socketTimeout MUST be specified in the builder, otherwise OData requests could block indefinitely" },
    "httpHeaders": { "kind": "parameter", "displayName": "Http Headers", "group": "common", "required": false, "type": "object", "javaType": "java.util.Map<java.lang.String,java.lang.String>", "deprecated": false, "secret": false, "description": "Custom HTTP headers to inject into every request, this could include OAuth tokens, etc." },
    "inBody": { "kind": "parameter", "displayName": "In Body", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "Sets the name of a parameter to be passed in the exchange In Body" },
    "proxy": { "kind": "parameter", "displayName": "Proxy", "group": "common", "required": false, "type": "object", "javaType": "org.apache.http.HttpHost", "deprecated": false, "secret": false, "description": "HTTP proxy server configuration" },
    "serviceUri": { "kind": "parameter", "displayName": "Service Uri", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "Target OData service base URI, e.g. http://services.odata.org/OData/OData.svc" },
    "socketTimeout": { "kind": "parameter", "displayName": "Socket Timeout", "group": "common", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "secret": false, "defaultValue": 30000, "description": "HTTP request timeout in milliseconds, defaults to 30,000 (30 seconds)" },
    "sslContextParameters": { "kind": "parameter", "displayName": "Ssl Context Parameters", "group": "common", "required": false, "type": "object", "javaType": "org.apache.camel.support.jsse.SSLContextParameters", "deprecated": false, "secret": false, "description": "To configure security using SSLContextParameters" },
    "bridgeErrorHandler": { "kind": "parameter", "displayName": "Bridge Error Handler", "group": "consumer", "label": "consumer", "required": false, "type": "boolean", "javaType": "boolean", "optionalPrefix": "consumer.", "deprecated": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exceptionHandler": { "kind": "parameter", "displayName": "Exception Handler", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": false, "secret": false, "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exchangePattern": { "kind": "parameter", "displayName": "Exchange Pattern", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "InOut", "InOptionalOut" ], "deprecated": false, "secret": false, "description": "Sets the exchange pattern when the consumer creates an exchange." },
    "lazyStartProducer": { "kind": "parameter", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "basicPropertyBinding": { "kind": "parameter", "displayName": "Basic Property Binding", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities" },
    "synchronous": { "kind": "parameter", "displayName": "Synchronous", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported)." }
  }
}

