{
 "component": {
    "kind": "component",
    "scheme": "atomix-map",
    "syntax": "atomix-map:resourceName",
    "title": "Atomix Map",
    "description": "The atomix-map component is used to access Atomix's distributed map.",
    "label": "clustering",
    "deprecated": false,
    "deprecationNote": "",
    "async": false,
    "consumerOnly": false,
    "producerOnly": false,
    "lenientProperties": false,
    "javaType": "org.apache.camel.component.atomix.client.map.AtomixMapComponent",
    "firstVersion": "2.20.0",
    "groupId": "org.apache.camel",
    "artifactId": "camel-atomix",
    "version": "3.0.0-SNAPSHOT"
  },
  "componentProperties": {
    "configuration": { "kind": "property", "displayName": "Configuration", "group": "common", "required": false, "type": "object", "javaType": "org.apache.camel.component.atomix.client.map.AtomixMapConfiguration", "deprecated": false, "secret": false, "description": "The shared component configuration" },
    "atomix": { "kind": "property", "displayName": "Atomix", "group": "common", "required": false, "type": "object", "javaType": "io.atomix.AtomixClient", "deprecated": false, "secret": false, "description": "The shared AtomixClient instance" },
    "nodes": { "kind": "property", "displayName": "Nodes", "group": "common", "required": false, "type": "array", "javaType": "java.util.List<io.atomix.catalyst.transport.Address>", "deprecated": false, "secret": false, "description": "The nodes the AtomixClient should connect to" },
    "configurationUri": { "kind": "property", "displayName": "Configuration Uri", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "The path to the AtomixClient configuration" },
    "resolvePropertyPlaceholders": { "kind": "property", "displayName": "Resolve Property Placeholders", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": true, "description": "Whether the component should resolve property placeholders on itself when starting. Only properties which are of String type can use property placeholders." },
    "basicPropertyBinding": { "kind": "property", "displayName": "Basic Property Binding", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities" }
  },
  "properties": {
    "resourceName": { "kind": "path", "displayName": "Resource Name", "group": "common", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "The distributed resource name" },
    "atomix": { "kind": "parameter", "displayName": "Atomix", "group": "common", "required": false, "type": "object", "javaType": "io.atomix.Atomix", "deprecated": false, "secret": false, "description": "The Atomix instance to use" },
    "configurationUri": { "kind": "parameter", "displayName": "Configuration Uri", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "The Atomix configuration uri." },
    "defaultAction": { "kind": "parameter", "displayName": "Default Action", "group": "common", "required": false, "type": "object", "javaType": "org.apache.camel.component.atomix.client.map.AtomixMap.Action", "deprecated": false, "secret": false, "defaultValue": "PUT", "description": "The default action." },
    "key": { "kind": "parameter", "displayName": "Key", "group": "common", "required": false, "type": "object", "javaType": "java.lang.Object", "deprecated": false, "secret": false, "description": "The key to use if none is set in the header or to listen for events for a specific key." },
    "nodes": { "kind": "parameter", "displayName": "Nodes", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "The address of the nodes composing the cluster." },
    "resultHeader": { "kind": "parameter", "displayName": "Result Header", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "The header that wil carry the result." },
    "transport": { "kind": "parameter", "displayName": "Transport", "group": "common", "required": false, "type": "object", "javaType": "io.atomix.catalyst.transport.Transport", "deprecated": false, "secret": false, "defaultValue": "io.atomix.catalyst.transport.netty.NettyTransport", "description": "Sets the Atomix transport." },
    "ttl": { "kind": "parameter", "displayName": "Ttl", "group": "common", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "secret": false, "description": "The resource ttl." },
    "bridgeErrorHandler": { "kind": "parameter", "displayName": "Bridge Error Handler", "group": "consumer", "label": "consumer", "required": false, "type": "boolean", "javaType": "boolean", "optionalPrefix": "consumer.", "deprecated": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exceptionHandler": { "kind": "parameter", "displayName": "Exception Handler", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": false, "secret": false, "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exchangePattern": { "kind": "parameter", "displayName": "Exchange Pattern", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "InOut", "InOptionalOut" ], "deprecated": false, "secret": false, "description": "Sets the exchange pattern when the consumer creates an exchange." },
    "lazyStartProducer": { "kind": "parameter", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "basicPropertyBinding": { "kind": "parameter", "displayName": "Basic Property Binding", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities" },
    "defaultResourceConfig": { "kind": "parameter", "displayName": "Default Resource Config", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "java.util.Properties", "deprecated": false, "secret": false, "description": "The cluster wide default resource configuration." },
    "defaultResourceOptions": { "kind": "parameter", "displayName": "Default Resource Options", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "java.util.Properties", "deprecated": false, "secret": false, "description": "The local default resource options." },
    "ephemeral": { "kind": "parameter", "displayName": "Ephemeral", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Sets if the local member should join groups as PersistentMember or not. If set to ephemeral the local member will receive an auto generated ID thus the local one is ignored." },
    "readConsistency": { "kind": "parameter", "displayName": "Read Consistency", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "io.atomix.resource.ReadConsistency", "enum": [ "ATOMIC", "ATOMIC_LEASE", "SEQUENTIAL", "LOCAL" ], "deprecated": false, "secret": false, "description": "The read consistency level." },
    "resourceConfigs": { "kind": "parameter", "displayName": "Resource Configs", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "java.util.Map<java.lang.String,java.util.Properties>", "prefix": "resource.config", "deprecated": false, "secret": false, "description": "Cluster wide resources configuration." },
    "resourceOptions": { "kind": "parameter", "displayName": "Resource Options", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "java.util.Map<java.lang.String,java.util.Properties>", "prefix": "resource.options", "deprecated": false, "secret": false, "description": "Local resources configurations" },
    "synchronous": { "kind": "parameter", "displayName": "Synchronous", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported)." }
  }
}

